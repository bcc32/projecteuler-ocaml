open Core

let prologue =
  {|;; AUTO-GENERATED BY: app/euler/data/generate_jbuild.ml

(library
 ((name euler_data)
  (modules (:standard \ generate_jbuild))))

(executables
 ((names (generate_jbuild))
  (libraries (core))
  (modules (generate_jbuild))))

(alias
 ((name runtest)
  (deps (jbuild generate_jbuild.exe))
  ;; If this fails, try running: ./generate_jbuild.exe > jbuild
  (action "patdiff -ascii jbuild <(./generate_jbuild.exe)")))

(rule
 ((targets (euler_data.ml))
  (deps ((glob_files *.txt)))
  (action "./gen-data.sh > %{targets}")))
|}
;;

let () =
  printf "%s" prologue;
  Sys.readdir "."
  |> Array.iter ~f:(fun name ->
    match String.chop_suffix name ~suffix:".txt" with
    | Some num ->
      printf
        {|
(rule
 ((targets (problem_%s.ml))
  (deps ((glob_files %s)))
  (action "./gen-problem.sh %s > %%{targets}")))
|}
        num
        name
        num
    | None -> ())
;;
